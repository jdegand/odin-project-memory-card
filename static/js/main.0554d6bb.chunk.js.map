{"version":3,"sources":["components/Choices.js","App.js","reportWebVitals.js","index.js"],"names":["Choices","props","choices","map","choice","onClick","handleClick","className","App","useState","score","setScore","highScore","setHighScore","userChoices","setUserChoices","methods","i","Math","floor","random","length","includes","push","getMethods","e","answers","target","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAgBeA,MAdf,SAAiBC,GAEf,IAAIC,EAAUD,EAAMC,QAAQC,KAAI,SAACC,GAC/B,OAAO,qBAAkBC,QAASJ,EAAMK,YAAjC,SAA+CF,GAArCA,MAGjB,OACE,qBAAKG,UAAU,OAAf,SACGL,KCgDMM,MAtDf,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,OAGqBF,mBAAS,GAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAIyBJ,mBAAS,IAJlC,mBAINK,EAJM,KAIOC,EAJP,KA0Cb,OACE,sBAAKR,UAAU,MAAf,UACE,6CACA,mFACA,+CAAkBK,KAClB,uBACA,0CAAaF,KACb,cAAC,EAAD,CAASR,QA3CM,WAUjB,IATA,IAAMc,EAAU,CAAC,kBAAkB,kBAAkB,4BAA4B,0BAA0B,mBAC3G,kBAAkB,uBAAuB,oCAAoC,qCAAqC,+BAClH,iCAAiC,0BAA0B,oCAAoC,cAC/F,wBAAwB,oBAAoB,mCAAmC,oBAAoB,gBACnG,6BAA6B,0CAA0C,gBAAgB,0BACvF,oCAAoC,8BAA8B,8BAA8B,8BAG5Fd,EAAU,GACLe,EAAI,EAAGA,EAAG,EAAGA,IAAK,CAEvB,IADF,IAAIb,EAASY,EAAQE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQK,SAChDnB,EAAQoB,SAASlB,IACnBA,EAASY,EAAQE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQK,SAExDnB,EAAQqB,KAAKnB,GAEhB,OAAOF,EA0BYsB,GAAclB,YAtBlB,SAACmB,GACjB,IAAMC,EAAO,YAAOZ,GAChBY,EAAQJ,SAASG,EAAEE,OAAOC,YAKvBhB,EAAUF,GACTG,EAAaH,GAEjBK,EAAe,IACfJ,EAAS,KARTe,EAAQH,KAAKE,EAAEE,OAAOC,WACtBb,EAAeW,GACff,EAASe,EAAQL,gBCxBVQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0554d6bb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Choices(props){\n\n  let choices = props.choices.map((choice)=> {\n    return <div key={choice} onClick={props.handleClick}>{choice}</div>\n  })\n\n    return(\n      <div className=\"grid\">\n        {choices}\n      </div>\n    )\n\n}\n\nexport default Choices;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Choices from './components/Choices';\n\nfunction App() {\n\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [userChoices, setUserChoices] = useState([]);\n\n  const getMethods = () => {\n    const methods = ['Object.assign()','Object.create()','Object.defineProperties()','Object.defineProperty()','Object.entries()',\n    'Object.freeze()','Object.fromEntries()','Object.getOwnPropertyDescriptor()','Object.getOwnPropertyDescriptors()','Object.getOwnPropertyNames()',\n    'Object.getOwnPropertySymbols()','Object.getPrototypeOf()','Object.prototype.hasOwnProperty()','Object.is()',\n    'Object.isExtensible()','Object.isFrozen()','Object.prototype.isPrototypeOf()','Object.isSealed()','Object.keys()',\n    'Object.preventExtensions()','Object.prototype.propertyIsEnumerable()','Object.seal()','Object.setPrototypeOf()',\n    'Object.prototype.toLocaleString()','Object.prototype.toSource()','Object.prototype.toString()','Object.prototype.valueOf()',\n    ]\n\n    let choices = []\n    for (let i = 0; i< 3; i++) {\n      let choice = methods[Math.floor(Math.random() * methods.length)];\n        while(choices.includes(choice)){\n            choice = methods[Math.floor(Math.random() * methods.length)];\n        }\n        choices.push(choice);\n  }\n     return choices;\n}\n\n\nconst handleClick = (e) => {\n    const answers = [...userChoices];\n    if(!answers.includes(e.target.innerText)) {\n        answers.push(e.target.innerText);\n        setUserChoices(answers);\n        setScore(answers.length);\n    } else {\n        if(highScore<score) {\n            setHighScore(score);\n        }\n        setUserChoices([]);\n        setScore(0);\n    }\n}\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <h2>Stay DRY and don't click on the same method twice</h2>\n      <div>Best Score: {highScore}</div>\n      <br />\n      <div>Score: {score}</div>\n      <Choices choices={getMethods()} handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}